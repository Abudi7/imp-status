{% extends 'base.html.twig' %}

{% block body %}
   <div class="container">
    <div class="mb-3">
        <a href="{% if is_granted('ROLE_ADMIN') %}
                {{ path('app_system_display', {'id': system.id}) }}
            {% else %}
                {{ path('app_subscription') }}
            {% endif %}"
       class="btn btn-secondary">Back to Display System</a>
    </div>
    <h2 class="bg-info text-center text-white rounded-pill">Events for {{ system.name }}</h2>
    <div class="table-responsive">
   <div class="alert alert-info">
    <strong>Event Action Meanings:</strong>
    <ul>
        <li><span class="badge bg-success">Finished:</span> Indicates that the maintenance event has already concluded.</li>
        <li><span class="badge bg-danger">Cancelled:</span> Indicates that the maintenance event has been cancelled.</li>
        <li><span class="badge bg-warning">Cancel:</span> Allows you to cancel a scheduled maintenance event that hasn't started yet.</li>
        <li><span class="badge bg-warning">Stop:</span> Allows you to stop an ongoing maintenance event.</li>
    </ul>
</div>

<div class="table-responsive">
    <table class="table table-bordered table-md" id="table" style="font-size: 13px">
        <thead class="bg-primary text-white">
            <tr>
                <th scope="col">Type</th>
                <th scope="col">Start Date</th>
                <th scope="col">End Date</th>
                <th scope="col">Info</th>
                <th scope="col">Created at</th>
                <th scope="col">Created by</th>
                {% if is_granted('ROLE_ADMIN') %}
                    <th scope="col">Email body</th>
                    <th scope="col">Actions</th>
                    <th scope="col">Edit-Maintenance</th>
                {% endif %}
            </tr>
        </thead>
        <tbody>
            {% for event in events %}
                {% set isOldEvent = event.start < "now"|date %}
                <tr {% if isOldEvent %}class="table-secondary" disabled{% endif %}>
                    <td>
                        <span class="type-badge
                            {% if event.type == 'available' %}
                                bg-success text-white
                            {% elseif event.type == 'maintenance' %}
                                bg-warning
                            {% elseif event.type == 'incident' %}
                                bg-danger text-white
                            {% endif %}
                        ">
                            {{ event.type }}
                        </span>
                    </td>
                    <td>{{ event.start|date('Y-m-d H:i:s') }}</td>
                    <td>
                        {% if event.end %}
                            {{ event.end|date('Y-m-d H:i:s') }}
                        {% else %}
                            Not resolved yet
                        {% endif %}
                    </td>
                    <td>{{ event.info }}</td>
                    <td>{{ event.createdAt|date('Y-m-d H:i:s') }}</td>
                    <td>{{ event.creator.email }}</td>
                    {% if is_granted('ROLE_ADMIN') %}
                        <td>{{ event.email }}</td>
                        <td>
                            {# Check if the event type is 'incident' and it hasn't been resolved yet #}
                            {% if event.type == 'incident' and event.end|date('Y-m-d') == '9999-12-31' %}
                                <a href="{{ path('app_events_resolve_incident', {'id': event.id}) }}" class="btn btn-danger">Revoke Incident</a>
                            {% elseif event.type == 'incident' and event.end %}
                                {# Display a button indicating that the incident has been resolved #}
                                <button class="btn btn-secondary" disabled>Resolved</button>
                            {% elseif event.type == 'maintenance' %}
                                {# Check if maintenance event has been concluded #}
                                {% if event.start|date('Y-m-d H:i:s') == event.end|date('Y-m-d H:i:s') %}
                                    <button class="btn btn-danger" disabled>Cancelled</button>
                                {% elseif event.start|date('Y-m-d H:i:s') < "now"|date('Y-m-d H:i:s') and event.end|date('Y-m-d H:i:s') < "now"|date('Y-m-d H:i:s') %}
                                    <button class="btn btn-success" disabled>Finished</button>
                                {% elseif event.start|date('Y-m-d H:i:s') > "now"|date('Y-m-d H:i:s') %}
                                    {# Display a button to cancel the scheduled maintenance #}
                                    <a href="{{ path('app_events_concluding', {'id': event.id}) }}" class="btn btn-warning">Cancel</a>
                                {% elseif event.start|date('Y-m-d H:i:s') < event.end|date('Y-m-d H:i:s') %}
                                    {# Display a button to stop the ongoing maintenance #}
                                    <a href="{{ path('app_events_concluding', {'id': event.id}) }}" class="btn btn-warning">Stop</a>
                                {% elseif event.start|date('Y-m-d H:i:s') < "now"|date('Y-m-d H:i:s') %}
                                    {# Display a button indicating that the maintenance has been concluded #}
                                    <button class="btn btn-success" disabled>Concluded</button>
                                {% endif %}
                            {% endif %}
                        </td>
                        <td>
                            <a href="{{ path('app_events_edit_maintenance', {'eventId': event.id}) }}" class="btn btn-primary">Edit</a>
                        </td>
                    {% endif %}
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
</div>




    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const resolvedButtons = document.querySelectorAll('.btn-secondary[disabled]');
            resolvedButtons.forEach(button => {
                button.addEventListener('click', function(event) {
                    event.preventDefault();
                     // Check if the incident is resolved
                if (event.target.textContent === 'Resolved') {
                    alert('This incident is already resolved.');
                } else {
                    // Prompt the user for confirmation
                    const confirmed = confirm('Are you sure you want to perform this action?');
                    
                    if (confirmed) {
                        // Perform the action (you can replace this with your custom logic)
                        performCustomAction(event.target);
                        
                        // Update the button text to show the action has been performed
                        event.target.textContent = 'Action Performed';
                        event.target.classList.remove('btn-secondary');
                        event.target.classList.add('btn-success');
                    }
                }
            });
        });
        
        // Function to perform a custom action
        function performCustomAction(button) {
            // Example: You can make an AJAX request, update the UI, etc.
            // Here, we are just logging a message
            console.log('Custom action performed for button:', button);
        }
    });

    </script>
{% endblock %}

