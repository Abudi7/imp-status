{# {% extends 'base.html.twig' %}

{% block body %}
    <div class="container">
        <h1>Scheduled Maintenance Calendar</h1>
        <div class="row">
        <div id="calendar"></div></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let calendarEl = document.getElementById('calendar');
            let calendar = new FullCalendar.Calendar(calendarEl, {
                timeZone: 'local', // Set the calendar's timezone to local
                initialView: 'dayGridMonth',
                events: [
                    {% for event in maintenanceEvents %}
                        {
                            title: '{{ event.system }}',
                            start: '{{ event.maintenanceStart|date('Y-m-d\TH:i:s') }}',
                            end: '{{ event.maintenanceEnd|date('Y-m-d\TH:i:s') }}',
                            url: '{{ path('app_scheduled_maintenance', {'id': event.id}) }}'
                        },
                    {% endfor %}
                ],
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                themeSystem: 'bootstrap',
                bootstrapFontAwesome: {
                    prev: 'fa-chevron-left',
                    next: 'fa-chevron-right'
                },
                contentHeight: 'auto',
                aspectRatio: 1.5, // Adjust the value as needed for optimal display on different screen sizes
                firstDay: 1 // Set Monday as the first day of the week (0: Sunday, 1: Monday, ...)
            });
            calendar.render();
        });
    </script>

    {# Dump the maintenance events for debugging purposes 
    {{ dump(maintenanceEvents) }}#}
{#{% endblock %} #}

{# {% extends 'base.html.twig' %}

{% block body %}
    <div class="container">
        <h1>Scheduled Maintenance</h1>
        <table class="table">
            <thead>
                <tr>
                    <th>System</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Responsible Person</th>
                    <th>Info</th>
                </tr>
            </thead>
            <tbody>
                {% for event in maintenanceEvents %}
                    <tr>
                        <td>{{ event.system.name }}</td>
                        <td>{{ event.maintenanceStart|date('Y-m-d H:i:s') }}</td>
                        <td>{{ event.maintenanceEnd|date('Y-m-d H:i:s') }}</td>
                        <td>{{ event.responsible_person }}</td>
                        <td>{{ event.info }}</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
{% endblock %} #}
{% extends 'base.html.twig' %}

{% block body %}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
{# <div class="container">
    <h1 class="text-center">Scheduled Maintenance Calendar</h1>
    <div class="row">
        <div class="col-md-12">
            <div id="calendar" class="row justify-content-center"></div>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        let calendarEl = document.getElementById('calendar');
        let calendar = new FullCalendar.Calendar(calendarEl, {
            timeZone: 'local', // Set the calendar's timezone to local

            initialView: 'dayGridMonth',
            events: [
                {% for event in maintenanceEvents %}
                    {
                        id: 'x',
                        title: '{{ event.system.name }}',
                        borderColor: '{% if event.status.name == 'Maintenance' %}rgb(255, 201, 73){% endif %}',
                        start: '{{ event.maintenanceStart|date('Y-m-d H:i:s') }}',
                        end: '{{ event.maintenanceEnd|date('Y-m-d H:i:s') }}',
                        url: '{{ path('app_system_status_show', {'id': event.id}) }}'
                    },
                {% endfor %}
            ],
              {# events: [
                    {
                        id: 'a',
                        title: 'my event',
                        start: '2023-05-27'
                    }
                ], #}
            {# headerToolbar: { 
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
            },
            themeSystem: 'bootstrap',
            bootstrapFontAwesome: {
                prev: 'fa-chevron-left',
                next: 'fa-chevron-right'
            },
            contentHeight: 'auto',
            aspectRatio: 1.5, // Adjust the value as needed for optimal display on different screen sizes
            firstDay: 1 // Set Monday as the first day of the week (0: Sunday, 1: Monday, ...)
        });

        calendar.render();
    });
</script> #}
{# {{ dump(maintenanceEvents) }} #}
<style>
    .table-bordered thead td,
    .table-bordered thead th {
        border-bottom-width: 2px;
        background-color: bisque;
    }
    @media (max-width: 576px) {
        .table-responsive {
            overflow-x: auto;
        }
    }
</style>
<div class="container" id="calendar-container">
    <!-- Navigation Row -->
    <div class="row">
        <div class="col-md-12">
            <!-- Navigation Buttons -->
            <div class="d-flex justify-content-between align-items-center">
                <a href="{{ path('app_scheduled_maintenance', {'date': startDate|date_modify('-1 month')|date('Y-m-d')}) }}" class="btn btn-primary mr-2">
                    <i class="fa fa-angle-left"></i>
                </a>
                <!-- Month and Calendar Icon -->
                <h2 class="text-center">
                    <strong>{{ startDate|date('F-Y') }}</strong> <i class="fa fa-calendar"></i> Scheduled Maintenance Calendar
                </h2>
                <a href="{{ path('app_scheduled_maintenance', {'date': startDate|date_modify('+1 month')|date('Y-m-d')}) }}" class="btn btn-primary">
                    <i class="fa fa-angle-right"></i>
                </a>
            </div>
            <!-- Current Date and Time in Client's Time Zone -->
            <h4 class="text-center text-primary text-opacity-75" id="client-time"></h4>
        </div>
    </div>
    <!-- Calendar Table -->
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table class="table table-bordered">
                    <!-- Table Header -->
                    <thead>
                        <tr>
                            <th>Monday</th>
                            <th>Tuesday</th>
                            <th>Wednesday</th>
                            <th>Thursday</th>
                            <th>Friday</th>
                            <th>Saturday</th>
                            <th>Sunday</th>
                        </tr>
                    </thead>
                    <tbody id="calendar-body">
                        {% for row in 0..4 %}
                            <tr>
                                {% for col in 0..6 %}
                                    {% set index = row * 7 + col %}
                                    {% set date = startDate|date_modify((index - offset) ~ ' day') %}
                                    {% set isToday = date|date('Y-m-d') == 'now'|date('Y-m-d') %}
                                    {% set isCurrentMonth = date|date('m') == startDate|date('m') %}
                                    {% set isMaintenanceDay = date|date('Y-m-d') in maintenanceEvents %}
                                    <td class="{% if isToday %}bg-primary opacity-50 text-white{% elseif not isCurrentMonth %}bg-light{% endif %} {% if isMaintenanceDay %}maintenance-info{% endif %}">
                                        {% if isToday %}
                                            <!-- Bold Date for Today -->
                                            <strong>{{ date|date('d F') }}</strong>
                                        {% else %}
                                            {{ date|date('d') }}
                                        {% endif %}
                                        {% for maintenanceEvent in maintenanceEvents %}
                                            {% if maintenanceEvent.maintenanceStart|date('Y-m-d') == date|date('Y-m-d') or maintenanceEvent.maintenanceEnd|date('Y-m-d') == date|date('Y-m-d')%}
                                                <!-- Maintenance Event -->
                                                <div class="bg-warning m-2 pl-1" style="border-radius: 20px;">
                                                    <i class="fa fa-exclamation-circle" style="font-size:14px"></i>
                                                    <a href="{{ path('app_system_status_show', {'id': maintenanceEvent.id}) }}" class="link-underline-light text-dark">
                                                        {{ maintenanceEvent.system }}
                                                        {{ maintenanceEvent.maintenanceStart|date('h:i') }} - {{ maintenanceEvent.maintenanceEnd|date('h:i') }}
                                                    </a>
                                                </div>
                                            {% endif %}
                                        {% endfor %}
                                    </td>
                                {% endfor %}
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Maintenance Schedule -->
    <div class="row">
        <div class="col-md-12">
            {% if maintenanceEvents|filter(m => m.maintenanceStart|date('m') == startDate|date('m'))|length > 0 %}
                <h3>Maintenance Schedule:</h3>
                <ul>
                    {% for maintenanceEvent in maintenanceEvents %}
                        {% if maintenanceEvent.maintenanceStart|date('m') == startDate|date('m') %}
                            <!-- Maintenance Event Information -->
                            <div class="alert alert-warning text-dark" role="alert">
                                <li>
                                    <strong>{{ maintenanceEvent.system }}</strong>
                                    <i class="fa fa-arrow-right"></i>
                                    <i class="fa fa-frown-o" style="font-size:16px;color:red"></i>
                                    {{ maintenanceEvent.maintenanceStart|date('Y.m.d  h:i') }} -- {{ maintenanceEvent.maintenanceEnd|date('Y.m.d  h:i') }}
                                    <i class="fa fa-smile-o" style="font-size:16px;color:green"></i>
                                </li>
                            </div>
                        {% endif %}
                    {% endfor %}
                </ul>
            {% else %}
                <!-- No Maintenance Events -->
                <div class="alert alert-success" role="alert">
                    The system is running smoothly <i class="fa fa-smile-o"></i>.
                    No maintenance events scheduled for this month.
                </div>
            {% endif %}
        </div>
    </div>
</div>

<script>
    // Update the current time element with the client's timezone
    var currentTimeElement = document.getElementById("client-time");
    var clientTimezone;

    // Function to get the client's timezone based on their location
    function getClientTimezone() {
    if (typeof Intl === 'object' && typeof Intl.DateTimeFormat === 'function') {
        clientTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
    } else {
        // Fallback to a default timezone if the Intl API is not supported
        clientTimezone = 'UTC';
    }
    }

    // Function to update the current time element with the client's timezone
    function updateCurrentTime() {
    currentTimeElement.innerText = new Date().toLocaleString("en-US", { timeZone: clientTimezone });
    }

    // Get the client's timezone initially
    getClientTimezone();

    // Update the current time element with the client's timezone
    updateCurrentTime();

    // Set a timer to update the current time periodically
    setInterval(updateCurrentTime, 1000); // Update every second

    // Convert maintenance event times to client's time zone
    var maintenanceEventElements = document.getElementsByClassName('maintenance-info');
    for (var i = 0; i < maintenanceEventElements.length; i++) {
        var maintenanceEventElement = maintenanceEventElements[i];
        var maintenanceStart = new Date(maintenanceEventElement.dataset.maintenanceStart);
        var maintenanceEnd = new Date(maintenanceEventElement.dataset.maintenanceEnd);

        maintenanceEventElement.innerHTML += '<br>' + maintenanceStart.toLocaleString('en-US', { timeZone: clientTimeZone }) + ' -- ' + maintenanceEnd.toLocaleString('en-US', { timeZone: clientTimeZone });
    } 
</script>


<!-- Http Request -->
    {# <script>
        // Function to update the calendar table
        function updateCalendarTable() {
            // Create an XMLHttpRequest object
            var xhr = new XMLHttpRequest();
            // Define the request URL
            var url = "http://localhost/AP_status/system_status/public/index.php/scheduled/maintenance";

            // Configure the AJAX request
            xhr.open("GET", url, true);
            // Set the callback function when the request is complete
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var responseData = xhr.responseText; // Get the response HTML

                    // Create a temporary div element to extract the table HTML
                    var tempDiv = document.createElement('div');
                    tempDiv.innerHTML = responseData;

                    // Find the table element within the temporary div
                    var table = tempDiv.querySelector('.container');

                    // Update the table with the new data
                    if (table) {
                        var actualTable = document.getElementById("calendar-container");
                        actualTable.innerHTML = table.innerHTML;
                    }
                }
            };
            // Send the AJAX request
            xhr.send();
        }

        // Call the updateCalendarTable function initially
        updateCalendarTable();

        // Set a timer to call the function periodically
        setInterval(updateCalendarTable, 10000); // Refresh every 10 seconds (adjust as needed)
    </script> #}
</div>

{% endblock %}